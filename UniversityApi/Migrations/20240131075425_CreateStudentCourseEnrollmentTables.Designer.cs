// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniversityApi.Data;

#nullable disable

namespace UniversityApi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240131075425_CreateStudentCourseEnrollmentTables")]
    partial class CreateStudentCourseEnrollmentTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UniversityApi.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Math"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 3,
                            Name = "English"
                        },
                        new
                        {
                            Id = 4,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("UniversityApi.Models.Enrollments", b =>
                {
                    b.Property<int>("AcademicYear")
                        .HasColumnType("integer")
                        .HasColumnName("academic_year");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("course_id");

                    b.HasKey("AcademicYear", "StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("enrollments");

                    b.HasData(
                        new
                        {
                            AcademicYear = 2020,
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            AcademicYear = 2020,
                            StudentId = 1,
                            CourseId = 2
                        },
                        new
                        {
                            AcademicYear = 2020,
                            StudentId = 1,
                            CourseId = 3
                        },
                        new
                        {
                            AcademicYear = 2020,
                            StudentId = 1,
                            CourseId = 4
                        },
                        new
                        {
                            AcademicYear = 2020,
                            StudentId = 2,
                            CourseId = 1
                        },
                        new
                        {
                            AcademicYear = 2020,
                            StudentId = 2,
                            CourseId = 2
                        },
                        new
                        {
                            AcademicYear = 2020,
                            StudentId = 2,
                            CourseId = 3
                        },
                        new
                        {
                            AcademicYear = 2021,
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            AcademicYear = 2021,
                            StudentId = 3,
                            CourseId = 2
                        },
                        new
                        {
                            AcademicYear = 2021,
                            StudentId = 4,
                            CourseId = 3
                        });
                });

            modelBuilder.Entity("UniversityApi.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Doe"
                        },
                        new
                        {
                            Id = 3,
                            Name = "John Smith"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Jane Smith"
                        });
                });

            modelBuilder.Entity("UniversityApi.Models.Enrollments", b =>
                {
                    b.HasOne("UniversityApi.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityApi.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniversityApi.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("UniversityApi.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
